{"version":3,"sources":["hooks/useForm.js","types/types.js","firebase/firebase-config.js","actions/ui.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/SideBar.js","components/journal/NothinSelected.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/JournalScreen.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","JournalApp.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","types","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","setError","error","type","payload","uiFinishLoading","loadNotes","uid","a","collection","get","notesSnap","notes","forEach","snapChild","push","id","data","fileUpdate","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","setNotes","activeNote","note","addNewNoteToSideBar","startSaveNote","dispatch","getState","url","noteToFireStore","doc","update","refreshNote","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","message","logout","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","className","onSubmit","e","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","map","SideBar","signOut","newNote","Date","getTime","add","NothingSelected","NotesAppBar","active","display","files","text","allowOutsideClick","showConfirmButton","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","startDeleting","JournalScreen","PublicRoute","isAuthenticated","Component","rest","props","PrivateRoute","localStorage","setItem","location","pathname","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","authReducer","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.14cfe6bb.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}\r\n","export const types = {\r\n\r\n    LOGIN: '[Auth] Login',\r\n    LOGOUT: '[Auth] Logout',\r\n\r\n    UI_SET_ERROR: '[UI] Set Error',\r\n    UI_UNSET_ERROR: '[UI] Unset Error',\r\n    UI_START_LOADING: '[UI] Start loading',\r\n    UI_FINISH_LOADING: '[UI] Finish loading',\r\n\r\n    NOTES_ADD_NEW: '[Notes] New note',\r\n    NOTES_ACTIVE: '[Notes] Set active note',\r\n    NOTES_LOAD: '[Notes] Load notes',\r\n    NOTES_UPDATED: '[Notes] Update note',\r\n    NOTES_FILES_URL: '[Notes] Update image url',\r\n    NOTES_DELETE: '[Notes] Delete note',\r\n    NOTES_LOGOUT_CLEANING: '[Notes] Logout Cleaning',\r\n\r\n}","import firebase from \"firebase/app\";\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBP76lutRf_B0SPlEssvTVNRAOIZuJ0ua0\",\r\n    authDomain: \"cra-journal.firebaseapp.com\",\r\n    projectId: \"cra-journal\",\r\n    storageBucket: \"cra-journal.appspot.com\",\r\n    messagingSenderId: \"525580294101\",\r\n    appId: \"1:525580294101:web:9592411d94e3ff97b40f5c\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","import {types} from \"../types/types\";\r\n\r\nexport const setError = (error) => {\r\n    return {\r\n        type: types.UI_SET_ERROR,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const unSetError = () => {\r\n    return {\r\n        type: types.UI_UNSET_ERROR\r\n    }\r\n}\r\n\r\nexport const uiStartLoading = () => {\r\n    return {\r\n        type: types.UI_START_LOADING\r\n    }\r\n}\r\n\r\nexport const uiFinishLoading = () => {\r\n    return {\r\n        type: types.UI_FINISH_LOADING\r\n    }\r\n}","import {db} from \"../firebase/firebase-config\";\r\n\r\nexport const loadNotes = async (uid) => {\r\n\r\n   const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n   const notes = [];\r\n\r\n   notesSnap.forEach(snapChild => {\r\n       notes.push({\r\n           id: snapChild.id,\r\n           ...snapChild.data()\r\n       })\r\n   });\r\n\r\n   return notes;\r\n}","export const fileUpdate = async(file) => {\r\n\r\n    const CLOUD_URL = 'https://api.cloudinary.com/v1_1/andrescs/upload';\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        const resp = await fetch(CLOUD_URL, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n        if (resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n    } catch (e) {\r\n       throw e;\r\n    }\r\n\r\n}","import Swal from \"sweetalert2\";\r\nimport {db} from \"../firebase/firebase-config\";\r\nimport {types} from \"../types/types\";\r\nimport {loadNotes} from \"../helpers/loadNotes\";\r\nimport {fileUpdate} from \"../helpers/fileUpload\";\r\n\r\nexport const startNewNote = () => {\r\n    return async (dispatch, getState) => {\r\n        const {uid} = getState().auth;\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n        dispatch(activeNote(doc.id, newNote));\r\n\r\n        dispatch(addNewNoteToSideBar(doc.id, newNote));\r\n    }\r\n}\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return async (dispatch) => {\r\n        const notes = await loadNotes(uid);\r\n        dispatch(setNotes(notes));\r\n    }\r\n}\r\n\r\nexport const setNotes = (notes) => {\r\n    return {\r\n        type: types.NOTES_LOAD,\r\n        payload: notes\r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) => {\r\n    return {\r\n        type: types.NOTES_ACTIVE,\r\n        payload: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n}\r\n\r\nexport const addNewNoteToSideBar = (id, note) => {\r\n    return {\r\n        type: types.NOTES_ADD_NEW,\r\n        payload: {\r\n            id, ...note\r\n        }\r\n    }\r\n}\r\n\r\nexport const startSaveNote = (note) => {\r\n    return async (dispatch, getState) => {\r\n        const {uid} = getState().auth;\r\n        if (!note.url) {\r\n            delete note.url;\r\n        }\r\n        const noteToFireStore = {...note};\r\n        delete noteToFireStore.id;\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFireStore);\r\n        dispatch(refreshNote(note.id, noteToFireStore));\r\n        Swal.fire('Saved', note.title, 'success');\r\n    }\r\n}\r\n\r\nexport const refreshNote = (id, note) => {\r\n    return {\r\n        type: types.NOTES_UPDATED,\r\n        payload: {\r\n            id,\r\n            note: {\r\n                id,\r\n                ...note\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const startUploading = (file) => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const {active:activeNote} = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpdate(file);\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch(startSaveNote(activeNote));\r\n        Swal.close();\r\n\r\n    }\r\n}\r\n\r\nexport const startDeleting = (id) => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const uid = getState().auth.uid;\r\n\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch(deleteNote(id));\r\n\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => {\r\n    return {\r\n        type: types.NOTES_DELETE,\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const notesLogOut = () => {\r\n    return {\r\n        type: types.NOTES_LOGOUT_CLEANING\r\n    }\r\n}","import Swal from 'sweetalert2';\r\nimport {types} from \"../types/types\";\r\nimport {firebase, googleAuthProvider} from \"../firebase/firebase-config\";\r\nimport {uiFinishLoading, uiStartLoading} from \"./ui\";\r\nimport {notesLogOut} from \"./notes\";\r\n\r\nexport const startLoginEmailPassword = (email,password) => {\r\n    return (dispatch) => {\r\n        dispatch(uiStartLoading());\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then( ({user}) => {\r\n\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n\r\n                dispatch(uiFinishLoading());\r\n            }).catch(error => {\r\n                Swal.fire(\r\n                    'Error',\r\n                    error.message,\r\n                    'error'\r\n                );\r\n                dispatch(uiFinishLoading());\r\n        })\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(async ({user}) => {\r\n                await  user.updateProfile({displayName: name});\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            })\r\n            .catch(e => {\r\n                Swal.fire(\r\n                    'Error',\r\n                    e.message,\r\n                    'error'\r\n                );\r\n            })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then(({user}) => {\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            });\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => {\r\n    return {\r\n        type: types.LOGIN,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        await firebase.auth().signOut()\r\n        dispatch(logout());\r\n        dispatch(notesLogOut());\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: types.LOGOUT\r\n    }\r\n}","import {Link} from 'react-router-dom';\r\nimport {useForm} from \"../../hooks/useForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {startGoogleLogin, startLoginEmailPassword} from \"../../actions/auth\";\r\n\r\nfunction LoginScreen () {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {loading} = useSelector(state => state.ui);\r\n\r\n\r\n    const [formValues, handleInputChange, reset] = useForm({\r\n       email: '',\r\n       password: ''\r\n    });\r\n\r\n    const {email, password} = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLoginEmailPassword(email,password));\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startGoogleLogin());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n            <form\r\n                onSubmit={handleLogin}\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <button\r\n                    className=\"btn btn-primary btn-block\"\r\n                    type=\"submit\"\r\n                    disabled={loading}\r\n                >\r\n                    Ingresar\r\n                </button>\r\n                <hr/>\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks:</p>\r\n                    <div\r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <Link className=\"link\" to=\"/auth/register\">\r\n                    Create new account\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default LoginScreen;","import {Link} from \"react-router-dom\";\r\nimport validator from \"validator/es\";\r\nimport {useForm} from \"../../hooks/useForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setError, unSetError} from \"../../actions/ui\";\r\nimport {startRegisterWithEmailPasswordName} from \"../../actions/auth\";\r\n\r\nfunction RegisterScreen () {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {ui:{msgError}} = useSelector(state => state);\r\n\r\n    const [formValues, handleInputChange, reset] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: '',\r\n    });\r\n\r\n    const { name, email, password, password2} = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if (isFormValid()) {\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name));\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if (name.trim().length===0) {\r\n            dispatch(setError('Name is required'));\r\n            return false;\r\n        } else if (!validator.isEmail(email)) {\r\n            dispatch(setError('Email error'));\r\n            return false;\r\n        } else if (password!==password2 || password.length < 5) {\r\n            dispatch(setError('Password should be at least 6 characters and match each other'));\r\n            return  false;\r\n        }\r\n\r\n        dispatch(unSetError());\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n            <form\r\n                onSubmit={handleRegister}\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n                {\r\n                    (msgError.trim().length > 0  &&\r\n                        <div className=\"auth__alert-error\">{msgError}</div>)\r\n                }\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <button\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                    type=\"submit\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n                <Link className=\"link\" to=\"/auth/login\">\r\n                    Already registered?\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default RegisterScreen;","import {Route, Switch, Redirect} from 'react-router-dom'\r\nimport LoginScreen from \"../components/auth/LoginScreen\";\r\nimport RegisterScreen from \"../components/auth/RegisterScreen\";\r\n\r\nfunction AuthRouter() {\r\n\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route\r\n                        exact\r\n                        path=\"/auth/login\"\r\n                        component={LoginScreen}\r\n                    />\r\n                    <Route\r\n                        exact\r\n                        path=\"/auth/register\"\r\n                        component={RegisterScreen}\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default AuthRouter;","import moment from 'moment';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {activeNote} from \"../../actions/notes\";\r\n\r\nfunction JournalEntry({id, date, title, body, url}) {\r\n    const noteDate = moment(date);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = () => {\r\n\r\n        dispatch(activeNote(id,\r\n            {date, title, body, url}\r\n        ));\r\n\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\"\r\n            onClick={handleClick}\r\n        >\r\n            {\r\n                url &&\r\n\r\n                <div\r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: \"cover\",\r\n                        backgroundImage: `url(${url})`,\r\n                    }}\r\n                >\r\n                </div>\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">{title}</p>\r\n                <p className=\"journal__entry-content\">{body}</p>\r\n            </div>\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('D')}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default JournalEntry;","import JournalEntry from \"./JournalEntry\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nfunction JournalEntries () {\r\n\r\n    const {notes} = useSelector(state => state.notes);\r\n\r\n    return (\r\n       <div className=\"journal__entries\">\r\n           {\r\n               notes.map(note => {\r\n                   return (\r\n                       <JournalEntry\r\n                           key={note.id}\r\n                           {...note}\r\n                       />\r\n                   )\r\n               })\r\n           }\r\n       </div>\r\n    )\r\n\r\n}\r\nexport default JournalEntries;","import JournalEntries from \"./JournalEntries\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {startLogout} from \"../../actions/auth\";\r\nimport {startNewNote} from \"../../actions/notes\";\r\n\r\nfunction SideBar () {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {name} = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    const handleNewEntry = () => {\r\n        dispatch(startNewNote());\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> {name} </span>\r\n                </h3>\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n            <div\r\n                className=\"journal__new-entry\"\r\n                onClick={handleNewEntry}\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">New entry</p>\r\n            </div>\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\nexport default SideBar;","function NothingSelected () {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br/>\r\n                Please create an entry!\r\n            </p>\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\nexport default NothingSelected;","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {startSaveNote, startUploading} from \"../../actions/notes\";\r\n\r\nfunction NotesAppBar() {\r\n\r\n    const dispatch = useDispatch();\r\n    const {active} = useSelector(state => state.notes);\r\n\r\n    const handleUpdateButton = () => {\r\n        dispatch(startSaveNote(active));\r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            dispatch(startUploading(file));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28 de agosto 2020</span>\r\n            <input\r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{display: 'none'}}\r\n                onChange={handleFileChange}\r\n            />\r\n            <div>\r\n                <button\r\n                    onClick={handlePictureClick}\r\n                    className=\"btn\"\r\n                >\r\n                    Picture\r\n                </button>\r\n                <button\r\n                    onClick={handleUpdateButton}\r\n                    className=\"btn\"\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default NotesAppBar;","import NotesAppBar from \"./NotesAppBar\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useForm} from \"../../hooks/useForm\";\r\nimport {useEffect, useRef} from 'react';\r\nimport {activeNote, startDeleting} from \"../../actions/notes\";\r\n\r\nfunction NoteScreen() {\r\n\r\n    const {active:note} = useSelector(state => state.notes);\r\n    const dispatch = useDispatch();\r\n    const [formValues, handleInputChange, reset] = useForm(note);\r\n    const {body, title, id} = formValues;\r\n\r\n    const activeId = useRef(note.id);\r\n\r\n    useEffect(() => {\r\n        if (note.id!==activeId.current) {\r\n            reset(note);\r\n            activeId.current = note.id;\r\n        }\r\n    }, [note, reset]);\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(activeNote(formValues.id, {...formValues}))\r\n\r\n    }, [formValues, dispatch])\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startDeleting(id));\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n            <div className=\"notes__content\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <textarea\r\n                    placeholder=\"What's happened today\"\r\n                    className=\"notes__textarea\"\r\n                    value={body}\r\n                    name=\"body\"\r\n                    onChange={handleInputChange}\r\n                ></textarea>\r\n                {\r\n                    note.url &&\r\n                    <div className=\"notes__image\">\r\n                        <img\r\n                            src={note.url}\r\n                            alt=\"Imagen\"\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={handleDelete}\r\n            >\r\n                Delete\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\nexport default NoteScreen;","import SideBar from \"./SideBar\";\r\nimport NothingSelected from \"./NothinSelected\";\r\nimport NoteScreen from \"../notes/NoteScreen\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nfunction JournalScreen () {\r\n\r\n    const {notes, active} = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n            <SideBar />\r\n            <main>\r\n                {\r\n                    (active) ? <NoteScreen /> : <NothingSelected />\r\n                }\r\n            </main>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default JournalScreen;","import {Route, Redirect} from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction PublicRoute ({\r\n    isAuthenticated,\r\n   component: Component,\r\n   ...rest\r\n}) {\r\n    return (\r\n        <Route {...rest}\r\n           component={ (props) => (\r\n               (!isAuthenticated) ?\r\n                   <Component {...props} /> :\r\n                   <Redirect to=\"/\" />\r\n           )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\nexport default PublicRoute;","import {Route, Redirect} from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction PrivateRoute ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) {\r\n\r\n    localStorage.setItem('lastPath', rest.location.pathname);\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                (isAuthenticated) ?\r\n                    <Component {...props} /> :\r\n                    <Redirect to=\"/login\" />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\nexport default PrivateRoute;","import {BrowserRouter as Router, Redirect, Switch} from 'react-router-dom'\r\nimport AuthRouter from \"./AuthRouter\";\r\nimport JournalScreen from \"../components/journal/JournalScreen\";\r\nimport {useEffect, useState} from 'react';\r\nimport {firebase} from \"../firebase/firebase-config\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {login} from \"../actions/auth\";\r\nimport PublicRoute from \"./PublicRoute\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport { startLoadingNotes} from \"../actions/notes\";\r\n\r\nfunction AppRouter() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged( (user) => {\r\n\r\n            if (user?.uid) {\r\n                dispatch(login(user.uid, user.displayName));\r\n                setIsLoggedIn(true);\r\n\r\n                dispatch(startLoadingNotes(user.uid));\r\n\r\n            } else {\r\n                setIsLoggedIn(false);\r\n            }\r\n            setChecking(false);\r\n\r\n\r\n        });\r\n    }, [dispatch, setChecking, setIsLoggedIn]);\r\n\r\n    if (checking) {\r\n        return (\r\n            <div>Please wait...</div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        isAuthenticated={isLoggedIn}\r\n                        path=\"/auth\"\r\n                        component={AuthRouter}\r\n                    />\r\n                    <PrivateRoute\r\n                        isAuthenticated={isLoggedIn}\r\n                        exact path=\"/\"\r\n                        component={JournalScreen}\r\n                    />\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import {types} from \"../types/types\";\r\n\r\nfunction authReducer (state = {}, action) {\r\n\r\n    switch (action.type) {\r\n        case types.LOGIN:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        case types.LOGOUT:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default authReducer;","import {types} from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: ''\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.UI_SET_ERROR:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        case types.UI_UNSET_ERROR:\r\n            return {\r\n                ...state,\r\n                msgError: ''\r\n            }\r\n        case types.UI_START_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.UI_FINISH_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import {types} from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.NOTES_ADD_NEW:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n        case types.NOTES_ACTIVE:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case types.NOTES_LOAD:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n        case types.NOTES_UPDATED:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id===action.payload.id\r\n                        ? action.payload.note : note\r\n                )\r\n            }\r\n        case types.NOTES_DELETE:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(note => note.id!==action.payload)\r\n            }\r\n        case types.NOTES_LOGOUT_CLEANING:\r\n            return {\r\n                ...state,\r\n                notes: [],\r\n                active: null\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport authReducer from \"../reducers/authReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {uiReducer} from \"../reducers/uiReducer\";\r\nimport {notesReducer} from \"../reducers/notesReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer,\r\n});\r\n\r\nexport const store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunk)\r\n));","import AppRouter from \"./routers/AppRouter\";\r\nimport {Provider} from 'react-redux';\r\nimport {store} from \"./store/store\";\r\n\r\nfunction JournalApp () {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default JournalApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/styles.scss';\n\nimport JournalApp from \"./JournalApp\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <JournalApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}