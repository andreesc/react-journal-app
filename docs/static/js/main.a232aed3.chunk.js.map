{"version":3,"sources":["hooks/useForm.js","types/types.js","firebase/firebase-config.js","actions/ui.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/SideBar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/JournalScreen.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/uiReducer.js","store/store.js","JournalApp.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","types","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","googleAuthProvider","auth","GoogleAuthProvider","setError","error","type","payload","uiFinishLoading","startLoginEmailPassword","email","password","dispatch","signInWithEmailAndPassword","then","user","login","uid","displayName","catch","Swal","fire","message","logout","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","className","onSubmit","e","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","a","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","JournalEntry","style","backgroundSize","backgroundImage","JournalEntries","map","SideBar","signOut","NotesAppBar","NoteScreen","JournalScreen","PublicRoute","isAuthenticated","Component","rest","props","PrivateRoute","localStorage","setItem","location","pathname","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","useEffect","onAuthStateChanged","authReducer","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a232aed3.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}\r\n","export const types = {\r\n\r\n    LOGIN: '[Auth] Login',\r\n    LOGOUT: '[Auth] Logout',\r\n\r\n    UI_SET_ERROR: '[UI] Set Error',\r\n    UI_UNSET_ERROR: '[UI] Unset Error',\r\n    UI_START_LOADING: '[UI] Start loading',\r\n    UI_FINISH_LOADING: '[UI] Finish loading',\r\n\r\n}","import firebase from \"firebase/app\";\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBP76lutRf_B0SPlEssvTVNRAOIZuJ0ua0\",\r\n    authDomain: \"cra-journal.firebaseapp.com\",\r\n    projectId: \"cra-journal\",\r\n    storageBucket: \"cra-journal.appspot.com\",\r\n    messagingSenderId: \"525580294101\",\r\n    appId: \"1:525580294101:web:9592411d94e3ff97b40f5c\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","import {types} from \"../types/types\";\r\n\r\nexport const setError = (error) => {\r\n    return {\r\n        type: types.UI_SET_ERROR,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const unSetError = () => {\r\n    return {\r\n        type: types.UI_UNSET_ERROR\r\n    }\r\n}\r\n\r\nexport const uiStartLoading = () => {\r\n    return {\r\n        type: types.UI_START_LOADING\r\n    }\r\n}\r\n\r\nexport const uiFinishLoading = () => {\r\n    return {\r\n        type: types.UI_FINISH_LOADING\r\n    }\r\n}","import Swal from 'sweetalert2';\r\nimport {types} from \"../types/types\";\r\nimport {firebase, googleAuthProvider} from \"../firebase/firebase-config\";\r\nimport {uiFinishLoading, uiStartLoading} from \"./ui\";\r\n\r\nexport const startLoginEmailPassword = (email,password) => {\r\n    return (dispatch) => {\r\n        dispatch(uiStartLoading());\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then( ({user}) => {\r\n\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n\r\n                dispatch(uiFinishLoading());\r\n            }).catch(error => {\r\n                Swal.fire(\r\n                    'Error',\r\n                    error.message,\r\n                    'error'\r\n                );\r\n                dispatch(uiFinishLoading());\r\n        })\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(async ({user}) => {\r\n                await  user.updateProfile({displayName: name});\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            })\r\n            .catch(e => {\r\n                Swal.fire(\r\n                    'Error',\r\n                    e.message,\r\n                    'error'\r\n                );\r\n            })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then(({user}) => {\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            });\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => {\r\n    return {\r\n        type: types.LOGIN,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        await firebase.auth().signOut()\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: types.LOGOUT\r\n    }\r\n}","import {Link} from 'react-router-dom';\r\nimport {useForm} from \"../../hooks/useForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {startGoogleLogin, startLoginEmailPassword} from \"../../actions/auth\";\r\n\r\nfunction LoginScreen () {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {loading} = useSelector(state => state.ui);\r\n\r\n\r\n    const [formValues, handleInputChange, reset] = useForm({\r\n       email: '',\r\n       password: ''\r\n    });\r\n\r\n    const {email, password} = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLoginEmailPassword(email,password));\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startGoogleLogin());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n            <form onSubmit={handleLogin}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <button\r\n                    className=\"btn btn-primary btn-block\"\r\n                    type=\"submit\"\r\n                    disabled={loading}\r\n                >\r\n                    Ingresar\r\n                </button>\r\n                <hr/>\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks:</p>\r\n                    <div\r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <Link className=\"link\" to=\"/auth/register\">\r\n                    Create new account\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default LoginScreen;","import {Link} from \"react-router-dom\";\r\nimport validator from \"validator/es\";\r\nimport {useForm} from \"../../hooks/useForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setError, unSetError} from \"../../actions/ui\";\r\nimport {startRegisterWithEmailPasswordName} from \"../../actions/auth\";\r\n\r\nfunction RegisterScreen () {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {ui:{msgError}} = useSelector(state => state);\r\n\r\n    const [formValues, handleInputChange, reset] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: '',\r\n    });\r\n\r\n    const { name, email, password, password2} = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if (isFormValid()) {\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name));\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if (name.trim().length===0) {\r\n            dispatch(setError('Name is required'));\r\n            return false;\r\n        } else if (!validator.isEmail(email)) {\r\n            dispatch(setError('Email error'));\r\n            return false;\r\n        } else if (password!==password2 || password.length < 5) {\r\n            dispatch(setError('Password should be at least 6 characters and match each other'));\r\n            return  false;\r\n        }\r\n\r\n        dispatch(unSetError());\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n            <form onSubmit={handleRegister}>\r\n\r\n                {\r\n                    (msgError.trim().length > 0  &&\r\n                        <div className=\"auth__alert-error\">{msgError}</div>)\r\n                }\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <button\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                    type=\"submit\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n                <Link className=\"link\" to=\"/auth/login\">\r\n                    Already registered?\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default RegisterScreen;","import {Route, Switch, Redirect} from 'react-router-dom'\r\nimport LoginScreen from \"../components/auth/LoginScreen\";\r\nimport RegisterScreen from \"../components/auth/RegisterScreen\";\r\n\r\nfunction AuthRouter() {\r\n\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route\r\n                        exact\r\n                        path=\"/auth/login\"\r\n                        component={LoginScreen}\r\n                    />\r\n                    <Route\r\n                        exact\r\n                        path=\"/auth/register\"\r\n                        component={RegisterScreen}\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default AuthRouter;","function JournalEntry() {\r\n    return (\r\n        <div className=\"journal__entry pointer\">\r\n            <div\r\n                className=\"journal__entry-picture\"\r\n                style={{\r\n                    backgroundSize: \"cover\",\r\n                    backgroundImage: 'url(https://www.online-tech-tips.com/wp-content/uploads/2020/04/WallpaperCraft.jpg.optimal.jpg)',\r\n                }}\r\n            >\r\n\r\n            </div>\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">Un nuevo día</p>\r\n                <p className=\"journal__entry-content\">Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>\r\n            </div>\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>Monday</span>\r\n                <h4>28</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default JournalEntry;","import JournalEntry from \"./JournalEntry\";\r\n\r\nfunction JournalEntries () {\r\n\r\n    const entries = [1,2,3,4,5];\r\n\r\n    return (\r\n       <div className=\"journal__entries\">\r\n           {\r\n               entries.map(value => {\r\n                   return (\r\n                       <JournalEntry key={value} />\r\n                   )\r\n               })\r\n           }\r\n       </div>\r\n    )\r\n\r\n}\r\nexport default JournalEntries;","import JournalEntries from \"./JournalEntries\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {startLogout} from \"../../actions/auth\";\r\n\r\nfunction SideBar () {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> Andres</span>\r\n                </h3>\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n            <div className=\"journal__new-entry\">\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">New entry</p>\r\n            </div>\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\nexport default SideBar;","function NotesAppBar() {\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28 de agosto 2020</span>\r\n            <div>\r\n                <button className=\"btn\">\r\n                    Picture\r\n                </button>\r\n                <button className=\"btn\">\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default NotesAppBar;","import NotesAppBar from \"./NotesAppBar\";\r\n\r\nfunction NoteScreen() {\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n            <div className=\"notes__content\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                />\r\n                <textarea\r\n                    placeholder=\"What's happened today\"\r\n                    className=\"notes__textarea\"\r\n                ></textarea>\r\n                <div className=\"notes__image\">\r\n                    <img\r\n                        src=\"https://www.online-tech-tips.com/wp-content/uploads/2020/04/WallpaperCraft.jpg.optimal.jpg\"\r\n                        alt=\"Imagen\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default NoteScreen;","import SideBar from \"./SideBar\";\r\nimport NothingSelected from \"./NothinSelected\";\r\nimport NoteScreen from \"../notes/NoteScreen\";\r\n\r\nfunction JournalScreen () {\r\n\r\n    return (\r\n        <div className=\"journal__main-content\">\r\n            <SideBar />\r\n            <main>\r\n                <NoteScreen />\r\n                {/*<NothingSelected />*/}\r\n            </main>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default JournalScreen;","import {Route, Redirect} from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction PublicRoute ({\r\n    isAuthenticated,\r\n   component: Component,\r\n   ...rest\r\n}) {\r\n    return (\r\n        <Route {...rest}\r\n           component={ (props) => (\r\n               (!isAuthenticated) ?\r\n                   <Component {...props} /> :\r\n                   <Redirect to=\"/\" />\r\n           )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\nexport default PublicRoute;","import {Route, Redirect} from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction PrivateRoute ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) {\r\n\r\n    localStorage.setItem('lastPath', rest.location.pathname);\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                (isAuthenticated) ?\r\n                    <Component {...props} /> :\r\n                    <Redirect to=\"/login\" />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\nexport default PrivateRoute;","import {BrowserRouter as Router, Redirect, Switch} from 'react-router-dom'\r\nimport AuthRouter from \"./AuthRouter\";\r\nimport JournalScreen from \"../components/journal/JournalScreen\";\r\nimport {useEffect, useState} from 'react';\r\nimport {firebase} from \"../firebase/firebase-config\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {login} from \"../actions/auth\";\r\nimport PublicRoute from \"./PublicRoute\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\n\r\nfunction AppRouter() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged( (user) => {\r\n\r\n            if (user?.uid) {\r\n                dispatch(login(user.uid, user.displayName));\r\n                setIsLoggedIn(true);\r\n            } else {\r\n                setIsLoggedIn(false);\r\n            }\r\n            setChecking(false);\r\n\r\n\r\n        });\r\n    }, [dispatch, setChecking, setIsLoggedIn]);\r\n\r\n    if (checking) {\r\n        return (\r\n            <div>Espere...</div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        isAuthenticated={isLoggedIn}\r\n                        path=\"/auth\"\r\n                        component={AuthRouter}\r\n                    />\r\n                    <PrivateRoute\r\n                        isAuthenticated={isLoggedIn}\r\n                        exact path=\"/\"\r\n                        component={JournalScreen}\r\n                    />\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import {types} from \"../types/types\";\r\n\r\nfunction authReducer (state = {}, action) {\r\n\r\n    switch (action.type) {\r\n        case types.LOGIN:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        case types.LOGOUT:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default authReducer;","import {types} from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: ''\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.UI_SET_ERROR:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        case types.UI_UNSET_ERROR:\r\n            return {\r\n                ...state,\r\n                msgError: ''\r\n            }\r\n        case types.UI_START_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.UI_FINISH_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport authReducer from \"../reducers/authReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {uiReducer} from \"../reducers/uiReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer\r\n});\r\n\r\nexport const store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunk)\r\n));","import AppRouter from \"./routers/AppRouter\";\r\nimport {Provider} from 'react-redux';\r\nimport {store} from \"./store/store\";\r\n\r\nfunction JournalApp () {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default JournalApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/styles.scss';\n\nimport JournalApp from \"./JournalApp\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <JournalApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}